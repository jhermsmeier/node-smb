var SMB = require( '../../smb' )
var Packet = require( '../../packet' )
var inherit = require( 'bloodline' )

/**
 * NegotiateRequest Constructor
 * @return {NegotiateRequest}
 */
function NegotiateRequest() {
  
  if( !(this instanceof NegotiateRequest) )
    return new NegotiateRequest()
  
  Packet.call( this )
  
  // StructureSize (2 bytes): The client MUST set this field to 36,
  // indicating the size of a NEGOTIATE request.
  // NOTE: This is not the size of the structure
  // with a single dialect in the Dialects[] array.
  // This value MUST be set regardless of the number of dialects sent.
  this.structureSize = 0x0024
  // DialectCount (2 bytes): The number of dialects that are contained
  // in the Dialects[] array. This value MUST be greater than 0.
  this.dialectCount = 0x0000
  // SecurityMode (2 bytes): The security mode field specifies whether
  // SMB signing is enabled or required at the client.
  // This field MUST be constructed using the SMB.NEGOTIATE_SIGNING_* values.
  this.securityMode = 0x0000
  // Reserved (2 bytes): The client MUST set this to 0,
  // and the server SHOULD ignore it on receipt.
  this.reserved = 0x0000
  // Capabilities (4 bytes): If the client implements the
  // SMB 3.x dialect family, the Capabilities field MUST be
  // constructed using the SMB.GLOBAL_CAP_* values.
  // Otherwise, this field MUST be set to 0.
  this.capabilities = 0x00000000
  // ClientGuid (16 bytes): It MUST be a GUID
  // (as specified in [MS-DTYP] section 2.3.4.3)
  // generated by the client, if the Dialects field contains a
  // value other than 0x0202. Otherwise, the client MUST set this to 0.
  this.clientGuid = new Buffer( 16 )
  // ClientStartTime (8 bytes): This field MUST NOT be used
  // and MUST be reserved. The client MUST set this to 0,
  // and the server MUST ignore it on receipt.
  this.clientStartTime = 0x0000000000000000
  // Dialects (variable): An array of one or more 16-bit integers
  // specifying the supported dialect revision numbers.
  // The array MUST contain at least one of the SMB.DIALECT.* values.
  this.dialects = []
  
}

/**
 * NegotiateRequest Prototype
 * @type {Object}
 */
NegotiateRequest.prototype = {
  
  constructor: NegotiateRequest,
  
  parsePayload: function( buffer ) {
    
    this.structureSize = buffer.readUInt16LE( 0 )
    this.dialectCount = buffer.readUInt16LE( 2 )
    this.securityMode = buffer.readUInt16LE( 4 )
    this.reserved = buffer.readUInt16LE( 6 )
    this.capabilities = buffer.readUInt32LE( 8 )
    this.clientGuid = buffer.toString( 12, 28, 'hex' )
    this.clientStartTime = buffer.slice( 28, 36 )
    this.dialects = []
    
    for( var i = 0; i < this.dialectCount; i++ ) {
      this.dialects.push(
        buffer.readUInt16LE( 36 + i * 2 )
      )
    }
    
    return this
    
  },
  
  serialize: function() {
    
    var size = this.structureSize + this.dialectCount * 2
    var buffer = new Buffer( size )
    buffer.fill( 0 )
    
    buffer.writeUInt16LE( this.structureSize, 0 )
    buffer.writeUInt16LE( this.dialectCount, 2 )
    buffer.writeUInt16LE( this.securityMode, 4 )
    buffer.writeUInt16LE( this.reserved, 6 )
    buffer.writeUInt32LE( this.capabilities, 8 )
    
    this.clientGuid.copy( buffer, 12 )
    
    for( var i = 0; i < this.dialectCount; i++ ) {
      buffer.writeUInt16LE( this.dialects[i], 36 + i * 2 )
    }
    
    return buffer
    
  },
  
}

inherit( NegotiateRequest, Packet )
// Exports
module.exports = NegotiateRequest
